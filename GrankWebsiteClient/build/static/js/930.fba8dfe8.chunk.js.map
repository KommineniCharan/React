{"version":3,"file":"static/js/930.fba8dfe8.chunk.js","mappings":"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","sources":["features/admin/Custumers/CustomerContext.js","features/admin/Custumers/CustomerForm.js","features/admin/Custumers/AddEditCustomer.js","features/admin/Custumers/CustomerList.js","features/admin/Custumers/Customers.js"],"sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst CustomerContext = createContext({});\r\nexport default CustomerContext;\r\n","import React, { useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\n\r\nimport UserService from \"../../../services/UserService\";\r\nimport CustomerContext from \"./CustomerContext\";\r\n// import User from \"../../../shared/models/UserModel\";\r\n\r\nconst userSchema = yup.object().shape({\r\n  name: yup.object({\r\n    first: yup.string().min(3, \"too short\"),\r\n    last: yup.string().min(3, \"too short\"),\r\n  }),\r\n  mobile: yup\r\n    .string()\r\n    .required(\"mobile is required\")\r\n    .matches(/[0-9]{10}$/, \"mobile must be 10 digit\"),\r\n  email: yup.string().email(),\r\n  password: yup.string().min(5, \"tooshort\"),\r\n  // gender: yup.string(),\r\n  role: yup.string(),\r\n  avatar: yup.string(),\r\n  idDoc: yup.string(),\r\n  dob: yup.date(),\r\n  address: yup.object({\r\n    street: yup.string(),\r\n    city: yup.string(),\r\n    country: yup.string(),\r\n    pincode: yup.string(),\r\n  }),\r\n});\r\n\r\nconst CustomerForm = () => {\r\n  const { initialUser, handleDialogClose, operation, loadUsers } =\r\n    useContext(CustomerContext);\r\n\r\n  const handleSubmit = (user) => {\r\n    const fd = new FormData();\r\n    fd.append(\"name.first\", user.name?.first);\r\n    fd.append(\"name.last\", user.name?.last);\r\n\r\n    if (user.address) {\r\n      for (const p in user.address) fd.append(`address.${p}`, user.address[p]);\r\n    }\r\n\r\n    const propArr = [\"name\", \"_id\", \"address\", \"createdAt\"];\r\n    for (const prop in user) {\r\n      if (!propArr.includes(prop)) fd.append(prop, user[prop]);\r\n    }\r\n\r\n    if (operation == \"edit\") {\r\n      // update user\r\n      UserService.updateUser(user._id, fd)\r\n        .then((response) => {\r\n          alert(\"User Updated...\");\r\n          handleDialogClose();\r\n          loadUsers();\r\n          console.log(response.data.data);\r\n        })\r\n        .catch((err) => {\r\n          alert(\"User not  Updated...\");\r\n          console.error(err);\r\n        });\r\n    } else {\r\n      // create user\r\n      UserService.createUser(fd)\r\n        .then((response) => {\r\n          alert(\"User Created...\");\r\n          handleDialogClose();\r\n          loadUsers();\r\n        })\r\n        .catch((err) => {\r\n          alert(\"User Not  Created...\");\r\n          console.error(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: {\r\n            first: \"\",\r\n            last: \"\",\r\n          },\r\n          mobile: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          // gender: \"\",\r\n          status: 1,\r\n          role: \"users\",\r\n          ...initialUser,\r\n        }}\r\n        validationSchema={userSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n        }) => (\r\n          <Box component=\"form\" onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  label=\"First Name\"\r\n                  name=\"name.first\"\r\n                  value={values.name.first}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={\r\n                    touched?.name && touched?.name.first && errors?.name?.first\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  helperText={\r\n                    touched?.name && touched?.name.first && errors?.name?.first\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  label=\"Last Name\"\r\n                  name=\"name.last\"\r\n                  value={values.name.last}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={\r\n                    touched?.name && touched?.name.last && errors?.name?.last\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  helperText={\r\n                    touched?.name && touched?.name.last && errors?.name?.last\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  label=\"Mobile\"\r\n                  name=\"mobile\"\r\n                  value={values.mobile}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={touched?.mobile && errors?.mobile ? true : false}\r\n                  helperText={touched?.mobile && errors?.mobile}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={touched?.email && errors?.email ? true : false}\r\n                  helperText={touched?.email && errors?.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={touched?.password && errors?.password ? true : false}\r\n                  helperText={touched?.password && errors?.password}\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <FormControl>\r\n                  <FormLabel id=\"gender\">Gender</FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"gender\"\r\n                    name=\"gender\"\r\n                    value={values.gender}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"female\"\r\n                      control={<Radio />}\r\n                      label=\"Female\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"male\"\r\n                      control={<Radio />}\r\n                      label=\"Male\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"other\"\r\n                      control={<Radio />}\r\n                      label=\"Other\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </Grid> */}\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"role\">Roles</InputLabel>\r\n                  <Select\r\n                    labelId=\"role\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.role}\r\n                    label=\"Role\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"users\">Customer</MenuItem>\r\n\r\n                    <MenuItem value=\"other\">Other</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"status\">Status</InputLabel>\r\n                  <Select\r\n                    labelId=\"status\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.status}\r\n                    label=\"Status\"\r\n                    name=\"status\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={1}>Active</MenuItem>\r\n                    <MenuItem value={0}>Inactive</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} container justifyContent=\"space-evenly\">\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  {operation == \"edit\" ? \"Update\" : \"Create\"}\r\n                </Button>\r\n                <Button\r\n                  onClick={handleDialogClose}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerForm;\r\n","import React, { useContext } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CustomerForm from \"./CustomerForm\";\r\nimport CustomerContext from \"./CustomerContext\";\r\nconst AddEditCustomer = () => {\r\n  const {\r\n    openDialog = false,\r\n    operation,\r\n    handleDialogClose,\r\n    initialUser,\r\n  } = useContext(CustomerContext);\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        open={openDialog}\r\n        onClose={handleDialogClose}\r\n      >\r\n        <DialogTitle>{operation == \"edit\" ? \"Edit\" : \"Add\"} User</DialogTitle>\r\n        <DialogContent>\r\n          <CustomerForm />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEditCustomer;\r\n","import React, { useState } from \"react\";\r\nimport MuiDatatable from \"mui-datatables\";\r\nimport Button from \"@mui/material/Button\";\r\nimport UserService from \"../../../services/UserService\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CustomerContext from \"./CustomerContext\";\r\nimport AddEditCustomer from \"./AddEditCustomer\";\r\nimport Swal from \"sweetalert2\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nconst CustomerList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [operation, setOperation] = useState(\"add\");\r\n  const [initialUser, setInitialUser] = useState();\r\n\r\n  const handleDialogClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const loadUsers = (query = \"?role=users\") => {\r\n    UserService.fetchAllUser(query)\r\n      .then((response) => {\r\n        setUsers(response?.data?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const addUser = () => {\r\n    setInitialUser({});\r\n    setOpenDialog(true);\r\n    setOperation(\"add\");\r\n  }; //addUser\r\n  const editUser = (user) => {\r\n    setInitialUser(user);\r\n    setOperation(\"edit\");\r\n    setOpenDialog(true);\r\n  }; //addUser\r\n\r\n  const deleteUser = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        UserService.deleteUser(id)\r\n          .then((response) => {\r\n            loadUsers();\r\n            Swal.fire(\"Deleted!\", \"User has been deleted.\", \"success\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            Swal.fire(\"Not Deleted!\", \"User has not been deleted.\", \"error\");\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      label: \"ID\",\r\n      name: \"userId\",\r\n      options: {\r\n        sort: true,\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Name\",\r\n      name: \"name\",\r\n      options: {\r\n        sort: true,\r\n        filter: false,\r\n        customBodyRenderLite: (index) => {\r\n          const user = users[index];\r\n          return `${user?.name?.first} ${user?.name?.last}`;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      label: \"Mobile\",\r\n      name: \"mobile\",\r\n      options: {\r\n        sort: true,\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      name: \"email\",\r\n      options: {\r\n        sort: true,\r\n        filter: false,\r\n      },\r\n    },\r\n    // {\r\n    //   label: \"Gender\",\r\n    //   name: \"gender\",\r\n    //   options: {\r\n    //     sort: true,\r\n    //     filter: false,\r\n    //   },\r\n    // },\r\n    {\r\n      label: \"Role\",\r\n      name: \"role\",\r\n      options: {\r\n        sort: true,\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      name: \"status\",\r\n      options: {\r\n        sort: true,\r\n        filter: false,\r\n        customBodyRenderLite: (index) => {\r\n          const user = users[index];\r\n          return user.status == 1 ? \"Active\" : \"InActive\";\r\n        },\r\n      },\r\n    },\r\n    {\r\n      label: \"Actions\",\r\n      name: \"action\",\r\n      options: {\r\n        sort: true,\r\n        filter: false,\r\n        customBodyRenderLite: (index) => {\r\n          const user = users[index];\r\n          return (\r\n            <>\r\n              <IconButton color=\"primary\" onClick={() => editUser(user)}>\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton color=\"error\" onClick={() => deleteUser(user._id)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => addUser()}\r\n        sx={{ backgroundColor: \"#ccc\" }}\r\n      >\r\n        Customer Add\r\n      </Button>\r\n      <MuiDatatable title=\"Customer list\" data={users} columns={columns} />\r\n      <CustomerContext.Provider\r\n        value={{\r\n          openDialog,\r\n          operation,\r\n          handleDialogClose,\r\n          initialUser,\r\n          loadUsers,\r\n        }}\r\n      >\r\n        <AddEditCustomer />\r\n      </CustomerContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n","import React from \"react\";\r\nimport CustomersList from \"../Custumers/CustomerList\";\r\nconst Customers = () => {\r\n  return (\r\n    <>\r\n      <CustomersList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n"],"names":["createContext","userSchema","yup","shape","name","first","min","last","mobile","required","matches","email","password","role","avatar","idDoc","dob","address","street","city","country","pincode","_useContext","useContext","CustomerContext","initialUser","handleDialogClose","operation","loadUsers","_jsx","_Fragment","children","Formik","initialValues","_objectSpread","status","validationSchema","onSubmit","user","_user$name","_user$name2","fd","FormData","append","p","concat","propArr","prop","includes","UserService","updateUser","_id","then","response","alert","console","log","data","catch","err","error","createUser","_ref","_errors$name","_errors$name2","_errors$name3","_errors$name4","values","touched","errors","handleBlur","handleChange","handleSubmit","Box","component","_jsxs","Grid","container","spacing","item","xs","md","TextField","fullWidth","variant","label","value","onChange","onBlur","helperText","type","FormControl","InputLabel","id","Select","labelId","MenuItem","justifyContent","Button","color","onClick","_useContext$openDialo","openDialog","Dialog","maxWidth","open","onClose","DialogTitle","DialogContent","CustomerForm","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","setOpenDialog","_useState5","_useState6","setOperation","_useState7","_useState8","setInitialUser","query","arguments","length","undefined","fetchAllUser","_response$data","React","columns","options","sort","filter","customBodyRenderLite","index","IconButton","editUser","EditIcon","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","deleteUser","DeleteIcon","sx","backgroundColor","MuiDatatable","Provider","AddEditCustomer","CustomersList"],"sourceRoot":""}